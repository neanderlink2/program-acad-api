// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgramAcad.Infra.Data.Workers;

namespace ProgramAcad.Infra.Data.Data.Migrations.ProgramAcadDb
{
    [DbContext(typeof(ProgramAcadDataContext))]
    partial class ProgramAcadDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProgramAcad.Domain.Entities.Algoritmo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("HtmlDescricao")
                        .HasColumnName("html_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNivelDificuldade")
                        .HasColumnName("id_nivel_dificuldade")
                        .HasColumnType("int");

                    b.Property<Guid>("IdTurma")
                        .HasColumnName("id_turma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAtivo")
                        .HasColumnName("bl_ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnName("titulo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdNivelDificuldade");

                    b.HasIndex("IdTurma");

                    b.ToTable("TB_ALGORITMO");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.AlgoritmoLinguagemDisponivel", b =>
                {
                    b.Property<Guid>("IdAlgoritmo")
                        .HasColumnName("id_algoritmo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdLinguagem")
                        .HasColumnName("id_linguagem_programacao")
                        .HasColumnType("int");

                    b.HasKey("IdAlgoritmo", "IdLinguagem");

                    b.HasIndex("IdLinguagem");

                    b.ToTable("TB_ALGORITMO_LINGUAGEM_DISPONIVEL");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.AlgoritmoResolvido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnName("data_conclusao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAlgoritmo")
                        .HasColumnName("id_algoritmo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdLinguagem")
                        .HasColumnName("id_linguagem_usada")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdAlgoritmo");

                    b.HasIndex("IdLinguagem");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TB_USUARIO_RESOLVE_ALGORITMO");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.CasoTeste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntradaEsperada")
                        .HasColumnName("entrada_esperada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdAlgoritmo")
                        .HasColumnName("id_algoritmo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SaidaEsperada")
                        .HasColumnName("saida_esperada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoMaximoDeExecucao")
                        .HasColumnName("tempo_maximo_execucao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAlgoritmo");

                    b.ToTable("TB_CASO_TESTE");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.ExecucaoTeste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCasoTeste")
                        .HasColumnName("id_caso_teste")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdLinguagem")
                        .HasColumnName("id_linguagem_programacao")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Sucesso")
                        .HasColumnName("sucesso")
                        .HasColumnType("bit");

                    b.Property<double>("TempoExecucao")
                        .HasColumnName("tempo_execucao")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCasoTeste");

                    b.HasIndex("IdLinguagem");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TB_TESTE_PRIMEIRA_EXECUCAO");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.LinguagemProgramacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiIdentifier")
                        .HasColumnName("api_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("NumCompilador")
                        .HasColumnName("num_tipo_compilador")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_LINGUAGEM_PROGRAMACAO");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.NivelDificuldade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("descricao")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Nivel")
                        .HasColumnName("nivel")
                        .HasColumnType("int");

                    b.Property<int>("PontosReceber")
                        .HasColumnName("pontos_a_receber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_NIVEL_DIFICULDADE");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CapacidadeAlunos")
                        .HasColumnName("capacidade_alunos")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnName("data_termino")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdInstrutor")
                        .HasColumnName("id_instrutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("nvarchar(75)")
                        .HasMaxLength(75);

                    b.Property<bool>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.Property<string>("UrlImagemTurma")
                        .HasColumnName("url_imagem_turma")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("IdInstrutor");

                    b.ToTable("TB_TURMA");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.TurmaUsuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTurma")
                        .HasColumnName("id_turma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Aceito")
                        .HasColumnName("aceito")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataIngresso")
                        .HasColumnName("data_ingresso")
                        .HasColumnType("datetime2");

                    b.Property<int>("PontosUsuario")
                        .HasColumnName("pontos_usuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdTurma");

                    b.HasIndex("IdTurma");

                    b.ToTable("TB_USUARIO_PERTENCE_TURMA");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .HasColumnName("cep")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Cpf")
                        .HasColumnName("cpf")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("data_nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsAtivo")
                        .HasColumnName("bl_ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsuarioExterno")
                        .HasColumnName("bl_usuario_externo")
                        .HasColumnType("bit");

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("NomeCompleto")
                        .HasColumnName("nome_completo")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("ESTUDANTE");

                    b.Property<string>("Sexo")
                        .HasColumnName("sexo")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.Algoritmo", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.NivelDificuldade", "NivelDificuldade")
                        .WithMany("AlgoritmosDesseNivel")
                        .HasForeignKey("IdNivelDificuldade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.Turma", "TurmaPertencente")
                        .WithMany("AlgoritmosDisponiveis")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.AlgoritmoLinguagemDisponivel", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.Algoritmo", "Algoritmo")
                        .WithMany("LinguagensPermitidas")
                        .HasForeignKey("IdAlgoritmo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.LinguagemProgramacao", "LinguagemProgramacao")
                        .WithMany("AlgoritmosDessaLinguagem")
                        .HasForeignKey("IdLinguagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.AlgoritmoResolvido", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.Algoritmo", "Algoritmo")
                        .WithMany("AlgoritmosResolvidos")
                        .HasForeignKey("IdAlgoritmo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.LinguagemProgramacao", "LinguagemProgramacao")
                        .WithMany("AlgoritmosResolvidosDessaLinguagem")
                        .HasForeignKey("IdLinguagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.Usuario", "Usuario")
                        .WithMany("AlgoritmosResolvidos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.CasoTeste", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.Algoritmo", "AlgoritmoVinculado")
                        .WithMany("CasosDeTeste")
                        .HasForeignKey("IdAlgoritmo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.ExecucaoTeste", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.CasoTeste", "CasoTeste")
                        .WithMany("ExecucoesTeste")
                        .HasForeignKey("IdCasoTeste")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.LinguagemProgramacao", "LinguagemProgramacao")
                        .WithMany("ExecucoesDessaLinguagem")
                        .HasForeignKey("IdLinguagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.Usuario", "UsuarioExecutou")
                        .WithMany("TestesExecutados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.Turma", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.Usuario", "Instrutor")
                        .WithMany("TurmasCriadas")
                        .HasForeignKey("IdInstrutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramAcad.Domain.Entities.TurmaUsuario", b =>
                {
                    b.HasOne("ProgramAcad.Domain.Entities.Turma", "Turma")
                        .WithMany("UsuariosInscritos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramAcad.Domain.Entities.Usuario", "Estudante")
                        .WithMany("TurmasInscritas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
